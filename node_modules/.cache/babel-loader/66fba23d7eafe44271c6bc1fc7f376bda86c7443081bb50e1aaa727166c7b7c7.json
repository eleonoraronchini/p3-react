{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  songs: [],\n  // Tutte le canzoni caricate dalle API\n  likedSongs: [],\n  // Canzoni \"Mi piace\"\n  currentSong: null // Canzone attualmente in riproduzione\n};\nconst musicSlice = createSlice({\n  name: 'music',\n  initialState,\n  reducers: {\n    setSongs: (state, action) => {\n      state.songs = action.payload;\n    },\n    setCurrentSong: (state, action) => {\n      state.currentSong = action.payload;\n    },\n    toggleLike: (state, action) => {\n      const song = action.payload;\n      if (state.likedSongs.some(likedSong => likedSong.id === song.id)) {\n        state.likedSongs = state.likedSongs.filter(likedSong => likedSong.id !== song.id);\n      } else {\n        state.likedSongs.push(song);\n      }\n    }\n  }\n});\nexport const {\n  setSongs,\n  setCurrentSong,\n  toggleLike\n} = musicSlice.actions;\nexport default musicSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","songs","likedSongs","currentSong","musicSlice","name","reducers","setSongs","state","action","payload","setCurrentSong","toggleLike","song","some","likedSong","id","filter","push","actions","reducer"],"sources":["C:/Users/eleon/REACT/p3-react/src/components/MusicSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  songs: [],            // Tutte le canzoni caricate dalle API\r\n  likedSongs: [],       // Canzoni \"Mi piace\"\r\n  currentSong: null,    // Canzone attualmente in riproduzione\r\n};\r\n\r\nconst musicSlice = createSlice({\r\n  name: 'music',\r\n  initialState,\r\n  reducers: {\r\n    setSongs: (state, action) => {\r\n      state.songs = action.payload;\r\n    },\r\n    setCurrentSong: (state, action) => {\r\n      state.currentSong = action.payload;\r\n    },\r\n    toggleLike: (state, action) => {\r\n      const song = action.payload;\r\n      if (state.likedSongs.some((likedSong) => likedSong.id === song.id)) {\r\n        state.likedSongs = state.likedSongs.filter((likedSong) => likedSong.id !== song.id);\r\n      } else {\r\n        state.likedSongs.push(song);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSongs, setCurrentSong, toggleLike } = musicSlice.actions;\r\n\r\nexport default musicSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EAAa;EACtBC,UAAU,EAAE,EAAE;EAAQ;EACtBC,WAAW,EAAE,IAAI,CAAK;AACxB,CAAC;AAED,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACL,WAAW,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMI,IAAI,GAAGJ,MAAM,CAACC,OAAO;MAC3B,IAAIF,KAAK,CAACN,UAAU,CAACY,IAAI,CAAEC,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,EAAE;QAClER,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACN,UAAU,CAACe,MAAM,CAAEF,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC;MACrF,CAAC,MAAM;QACLR,KAAK,CAACN,UAAU,CAACgB,IAAI,CAACL,IAAI,CAAC;MAC7B;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,QAAQ;EAAEI,cAAc;EAAEC;AAAW,CAAC,GAAGR,UAAU,CAACe,OAAO;AAE1E,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}