{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eleon\\\\REACT\\\\p3-react\\\\src\\\\components\\\\Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentSong } from '../components/MusicSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  var _currentSong$artist;\n  const dispatch = useDispatch();\n  const currentSong = useSelector(state => state.music.currentSong);\n  const likedSongs = useSelector(state => state.music.likedSongs);\n\n  // Stato per gestire la riproduzione\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [audio] = useState(new Audio((currentSong === null || currentSong === void 0 ? void 0 : currentSong.preview) || \"\"));\n  const progressBarRef = useRef(null);\n\n  // Funzione per aggiornare il progresso\n  const updateProgress = () => {\n    const currentTime = audio.currentTime;\n    const duration = audio.duration;\n    setProgress(currentTime / duration * 100);\n  };\n\n  // Funzione per iniziare a riprodurre la canzone\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Funzione per gestire la navigazione tra le canzoni (Successiva / Precedente)\n  const handleNextSong = () => {\n    // Logica per la canzone successiva, potrebbe dipendere dalla tua struttura di canzoni\n  };\n  const handlePrevSong = () => {\n    // Logica per la canzone precedente\n  };\n\n  // Funzione per cambiare il progresso della canzone (cliccando sulla barra)\n  const handleProgressChange = event => {\n    const width = progressBarRef.current.clientWidth;\n    const clickPosition = event.nativeEvent.offsetX;\n    const newProgress = clickPosition / width * 100;\n    audio.currentTime = newProgress / 100 * audio.duration;\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    if (currentSong) {\n      setProgress(0);\n      setIsPlaying(false);\n      audio.src = currentSong.preview;\n    }\n  }, [currentSong, audio]);\n  useEffect(() => {\n    if (audio) {\n      audio.addEventListener('timeupdate', updateProgress);\n      return () => {\n        audio.removeEventListener('timeupdate', updateProgress);\n      };\n    }\n  }, [audio]);\n  if (!currentSong) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid fixed-bottom bg-container pt-1\",\n      children: \"No song selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid fixed-bottom bg-container pt-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-10 offset-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row h-100 flex-column justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 col-md-4 playerControls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: handlePrevSong,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/public/assets/prev.png\",\n                  alt: \"prev\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: handlePlayPause,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: isPlaying ? \"assets/playerbuttons/pause.png\" : \"assets/playerbuttons/play.png\",\n                  alt: \"play-pause\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: handleNextSong,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"assets/playerbuttons/next.png\",\n                  alt: \"next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress mt-3\",\n              ref: progressBarRef,\n              onClick: handleProgressChange,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"progressbar\",\n                \"aria-valuenow\": progress,\n                \"aria-valuemin\": \"0\",\n                \"aria-valuemax\": \"100\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: currentSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_currentSong$artist = currentSong.artist) === null || _currentSong$artist === void 0 ? void 0 : _currentSong$artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"V5iDSn0EuOqVcsWhktYwhzHaA1s=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","setCurrentSong","jsxDEV","_jsxDEV","Player","_s","_currentSong$artist","dispatch","currentSong","state","music","likedSongs","isPlaying","setIsPlaying","progress","setProgress","audio","Audio","preview","progressBarRef","updateProgress","currentTime","duration","handlePlayPause","pause","play","handleNextSong","handlePrevSong","handleProgressChange","event","width","current","clientWidth","clickPosition","nativeEvent","offsetX","newProgress","src","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","alt","ref","role","style","title","artist","name","_c","$RefreshReg$"],"sources":["C:/Users/eleon/REACT/p3-react/src/components/Player.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCurrentSong } from '../components/MusicSlice'; \r\n\r\nconst Player = () => {\r\n  const dispatch = useDispatch();\r\n  const currentSong = useSelector((state) => state.music.currentSong);\r\n  const likedSongs = useSelector((state) => state.music.likedSongs);\r\n  \r\n  // Stato per gestire la riproduzione\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [audio] = useState(new Audio(currentSong?.preview || \"\"));\r\n  const progressBarRef = useRef(null);\r\n\r\n  // Funzione per aggiornare il progresso\r\n  const updateProgress = () => {\r\n    const currentTime = audio.currentTime;\r\n    const duration = audio.duration;\r\n    setProgress((currentTime / duration) * 100);\r\n  };\r\n\r\n  // Funzione per iniziare a riprodurre la canzone\r\n  const handlePlayPause = () => {\r\n    if (isPlaying) {\r\n      audio.pause();\r\n    } else {\r\n      audio.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Funzione per gestire la navigazione tra le canzoni (Successiva / Precedente)\r\n  const handleNextSong = () => {\r\n    // Logica per la canzone successiva, potrebbe dipendere dalla tua struttura di canzoni\r\n  };\r\n\r\n  const handlePrevSong = () => {\r\n    // Logica per la canzone precedente\r\n  };\r\n\r\n  // Funzione per cambiare il progresso della canzone (cliccando sulla barra)\r\n  const handleProgressChange = (event) => {\r\n    const width = progressBarRef.current.clientWidth;\r\n    const clickPosition = event.nativeEvent.offsetX;\r\n    const newProgress = (clickPosition / width) * 100;\r\n    audio.currentTime = (newProgress / 100) * audio.duration;\r\n    setProgress(newProgress);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentSong) {\r\n      setProgress(0);\r\n      setIsPlaying(false);\r\n      audio.src = currentSong.preview;\r\n    }\r\n  }, [currentSong, audio]);\r\n\r\n  useEffect(() => {\r\n    if (audio) {\r\n      audio.addEventListener('timeupdate', updateProgress);\r\n      return () => {\r\n        audio.removeEventListener('timeupdate', updateProgress);\r\n      };\r\n    }\r\n  }, [audio]);\r\n\r\n  if (!currentSong) {\r\n    return <div className=\"container-fluid fixed-bottom bg-container pt-1\">No song selected</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid fixed-bottom bg-container pt-1\">\r\n      <div className=\"row h-100\">\r\n        <div className=\"col-lg-10 offset-lg-2\">\r\n          <div className=\"row h-100 flex-column justify-content-center align-items-center\">\r\n            <div className=\"col-6 col-md-4 playerControls\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <a href=\"#\" onClick={handlePrevSong}>\r\n                  <img src=\"/public/assets/prev.png\" alt=\"prev\" />\r\n                </a>\r\n                <a href=\"#\" onClick={handlePlayPause}>\r\n                  <img src={isPlaying ? \"assets/playerbuttons/pause.png\" : \"assets/playerbuttons/play.png\"} alt=\"play-pause\" />\r\n                </a>\r\n                <a href=\"#\" onClick={handleNextSong}>\r\n                  <img src=\"assets/playerbuttons/next.png\" alt=\"next\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"progress mt-3\" ref={progressBarRef} onClick={handleProgressChange}>\r\n                <div \r\n                  role=\"progressbar\" \r\n                  aria-valuenow={progress} \r\n                  aria-valuemin=\"0\" \r\n                  aria-valuemax=\"100\" \r\n                  style={{ width: `${progress}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"song-info text-center\">\r\n        <h4>{currentSong.title}</h4>\r\n        <p>{currentSong.artist?.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}